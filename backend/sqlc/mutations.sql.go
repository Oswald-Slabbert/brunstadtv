// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: mutations.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const setDeviceToken = `-- name: setDeviceToken :exec
INSERT INTO users.devices (token, profile_id, updated_at)
VALUES ($1::varchar, $2::uuid, now())
ON CONFLICT (token) DO UPDATE SET updated_at = EXCLUDED.updated_at
`

type setDeviceTokenParams struct {
	Column1 string    `db:"column_1" json:"column1"`
	Column2 uuid.UUID `db:"column_2" json:"column2"`
}

func (q *Queries) setDeviceToken(ctx context.Context, arg setDeviceTokenParams) error {
	_, err := q.db.ExecContext(ctx, setDeviceToken, arg.Column1, arg.Column2)
	return err
}
