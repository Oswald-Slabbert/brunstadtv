directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

type Page{
  id: ID!
  code: String!
  title: String!
  description: String
  sections(
    first: Int
    after: Int
  ): SectionConnection! @goField(forceResolver: true)
}

type SectionConnection{
  total: Int!
  sections: [Section!]!
}

enum Language{
  en
  no
  de
}

interface Section{
  id: ID!
  title: String!
}

enum ItemSectionType {
  cards
  slider
}

type ItemSection implements Section {
  id: ID!
  page: Page! @goField(forceResolver: true)
  title: String!
  type: ItemSectionType!
  collection: Collection @goField(forceResolver: true)
}

type Collection {
  id: ID!
  items: [CollectionItem!]! @goField(forceResolver: true)
}

scalar Cursor
scalar Date

interface CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
}

type URLItem implements CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  url: String!
}

type ShowItem implements CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  show: Show!
}

type SeasonItem implements CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String!
  season: Season!
}

type EpisodeItem implements CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  episode: Episode!
}

type PageItem implements CollectionItem {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  page: Page!
}

type Show {
  id: ID!
  title: String!
  description: String!
  episodeCount: Int!
  seasonCount: Int!
  seasons: [Season!]! @goField(forceResolver: true)
}

type Season {
  id: ID!
  title: String!
  description: String!
  number: Int!
  show: Show! @goField(forceResolver: true)
  episodes: [Episode!]! @goField(forceResolver: true)
}

type Episode {
  id: ID!
  title: String!
  description: String!
  extraDescription: String!
  streams: [Stream!]! @goField(forceResolver: true)
  files: [File!]! @goField(forceResolver: true)
  chapters: [Chapter!]!
  season: Season @goField(forceResolver: true)
  duration: Int!
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
  episodeNumber: Int
}

type Chapter {
  id: ID!
  start: Int!
  title: String!
}

type File {
  id: ID!
  url: String!
  audioLanguage: Language!
  subtitleLanguage: Language
  size: Int
  fileName: String!
  mimeType: String!
}

type Stream {
  id: ID!
  url: String!
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
  type: StreamType!
}

enum StreamType {
  hls
  cmaf
  dash
}

schema{
  query: QueryRoot
}

type CalendarPeriod {
  id: ID!
  activeDays: [Date!]!
  events: [Event!]!
}

type CalendarDay {
  id: ID!
  events: [Event!]!
  tvGuideEntries: [TvGuideEntry!]!
}

type Event {
  id: ID!
  start: String!
  end: String!
  tvGuideEntries: [TvGuideEntry!]!
  bannerImageURL: String!
}

type TvGuideEntry {
  id: ID!
  start: String!
  end: String!
  episode: Episode
}

type Calendar {
  period(from: Date!, to: Date!) : CalendarPeriod
  day(day: Date!) : CalendarDay
}

type Settings {
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
}

type FAQ {
  question: String!
  answer: String!
}

type FAQCategory {
  id: ID!
  name: String!
  questions: [FAQ!]!
}

type User {
  id: ID
  anonymous: Boolean!
  bccMember: Boolean!
  audience: String
  email: String
  settings: Settings!
  roles: [String!]!
}

interface SearchResultItem {
  id: ID!
  collection: String!
  title: String!
  header: String
  description: String
  highlight: String
  image: String
  url: String!
}

type EpisodeSearchItem implements SearchResultItem {
  id: ID!
  collection: String!
  title: String!
  header: String
  description: String
  highlight: String
  image: String
  url: String!
  showId: ID
  showTitle: String
  show: Show @goField(forceResolver: true)
  seasonId: ID
  seasonTitle: String
  season: Season @goField(forceResolver: true)
}

type SeasonSearchItem implements SearchResultItem {
  id: ID!
  collection: String!
  title: String!
  header: String
  description: String
  highlight: String
  image: String
  url: String!
  showId: ID!
  showTitle: String!
  show: Show! @goField(forceResolver: true)
}

type ShowSearchItem implements SearchResultItem {
  id: ID!
  collection: String!
  title: String!
  header: String
  description: String
  highlight: String
  image: String
  url: String!
}

type SearchResult {
  hits: Int!
  page: Int!
  result: [SearchResultItem!]!
}

type QueryRoot{
  page(
    id: ID
    code: String
  ): Page

  pages(
    first: Int
    offset: Int
  ): [Page!]!

  episode(
    id: ID!
  ): Episode

  season(
    id: ID!
  ): Season

  show(
    id: ID!
  ): Show

  section(
    id: ID!
  ): Section

  search(
    queryString: String!
    first: Int
    offset: Int
  ): SearchResult!

  calendar: Calendar
  event(id: ID!): Event
  allFAQs: [FAQCategory!]!
  me: User!
}
