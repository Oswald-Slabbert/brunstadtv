directive @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

schema{
  query: QueryRoot
}

interface Pagination {
  total: Int!
  first: Int!
  offset: Int!
}


enum Language{
  en
  no
  de
}

scalar Cursor
scalar Date

interface Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
}

type CollectionItemPagination implements Pagination {
  total: Int!
  first: Int!
  offset: Int!
  items: [Item!]!
}

type URLItem implements Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  url: String!
}

type ShowItem implements Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String @goField(forceResolver: true)
  show: Show!
}

type SeasonItem implements Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String @goField(forceResolver: true)
  season: Season!
}

type EpisodeItem implements Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String @goField(forceResolver: true)
  episode: Episode!
}

type PageItem implements Item {
  id: ID!
  sort: Int!
  title: String!
  imageUrl: String
  page: Page!
}

type Show {
  id: ID!
  legacyID: ID
  title: String!
  description: String!
  imageUrl: String @goField(forceResolver: true)
  episodeCount: Int!
  seasonCount: Int!
  seasons(
    first: Int
    offset: Int
  ): SeasonPagination! @goField(forceResolver: true)
}

type ShowPagination implements Pagination {
  total: Int!
  first: Int!
  offset: Int!
  items: [Show!]!
}

type Season {
  id: ID!
  legacyID: ID
  ageRating: String!
  title: String!
  description: String!
  imageUrl: String @goField(forceResolver: true)
  number: Int!
  show: Show! @goField(forceResolver: true)
  episodes(
    first: Int
    offset: Int
  ): EpisodePagination! @goField(forceResolver: true)
}

type SeasonPagination implements Pagination {
  total: Int!
  first: Int!
  offset: Int!
  items: [Season!]!
}

type Episode {
  id: ID!
  legacyID: ID
  legacyProgramID: ID
  ageRating: String!
  title: String!
  description: String!
  extraDescription: String!
  imageUrl: String @goField(forceResolver: true)
  streams: [Stream!]! @goField(forceResolver: true)
  files: [File!]! @goField(forceResolver: true)
  chapters: [Chapter!]!
  season: Season @goField(forceResolver: true)
  duration: Int!
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
  number: Int
}

type EpisodePagination implements Pagination {
  total: Int!
  first: Int!
  offset: Int!
  items: [Episode!]!
}

type Chapter {
  id: ID!
  start: Int!
  title: String!
}

type File {
  id: ID!
  url: String!
  audioLanguage: Language!
  subtitleLanguage: Language
  size: Int
  fileName: String!
  mimeType: String!
}

type Stream {
  id: ID!
  url: String!
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
  type: StreamType!
}

enum StreamType {
  hls_ts
  hls_cmaf
  dash
}

type Settings {
  audioLanguages: [Language!]!
  subtitleLanguages: [Language!]!
}

type User {
  id: ID
  anonymous: Boolean!
  bccMember: Boolean!
  audience: String
  email: String
  settings: Settings!
  roles: [String!]!
}

type QueryRoot{
  application: Application!

  page(
    id: ID
    code: String
  ): Page!

  section(
    id: ID!
  ): Section!

  show(
    id: ID!
  ): Show!

  season(
    id: ID!
  ): Season!

  episode(
    id: ID!
  ): Episode!

  collection(
    id: ID!
  ): Collection!

  search(
    queryString: String!
    first: Int
    offset: Int
    type: String
    minScore: Int
  ): SearchResult!

  messages: Messages!

  calendar: Calendar
  event(id: ID!): Event

  faq: FAQ!

  me: User!

  config: Config!
}
